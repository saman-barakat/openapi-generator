# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401
from openapi_server.models.channel_profile_details import ChannelProfileDetails
from openapi_server.models.super_sticker_metadata import SuperStickerMetadata


class SuperChatEventSnippet(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    SuperChatEventSnippet - a model defined in OpenAPI

        amount_micros: The amount_micros of this SuperChatEventSnippet [Optional].
        channel_id: The channel_id of this SuperChatEventSnippet [Optional].
        comment_text: The comment_text of this SuperChatEventSnippet [Optional].
        created_at: The created_at of this SuperChatEventSnippet [Optional].
        currency: The currency of this SuperChatEventSnippet [Optional].
        display_string: The display_string of this SuperChatEventSnippet [Optional].
        is_super_sticker_event: The is_super_sticker_event of this SuperChatEventSnippet [Optional].
        message_type: The message_type of this SuperChatEventSnippet [Optional].
        super_sticker_metadata: The super_sticker_metadata of this SuperChatEventSnippet [Optional].
        supporter_details: The supporter_details of this SuperChatEventSnippet [Optional].
    """

    amount_micros: Optional[str] = None
    channel_id: Optional[str] = None
    comment_text: Optional[str] = None
    created_at: Optional[datetime] = None
    currency: Optional[str] = None
    display_string: Optional[str] = None
    is_super_sticker_event: Optional[bool] = None
    message_type: Optional[int] = None
    super_sticker_metadata: Optional[SuperStickerMetadata] = None
    supporter_details: Optional[ChannelProfileDetails] = None

SuperChatEventSnippet.update_forward_refs()
