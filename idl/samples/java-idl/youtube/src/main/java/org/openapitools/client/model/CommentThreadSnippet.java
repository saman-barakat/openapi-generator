/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.Comment;

/**
 * Basic details about a comment thread.
 */
@ApiModel(description = "Basic details about a comment thread.")
@javax.annotation.Generated(value = "com.us.idl.javaidl.JavaIDLCodegen", date = "2021-08-24T20:55:04.712703200+02:00[Europe/Paris]")
public class CommentThreadSnippet {
  public static final String SERIALIZED_NAME_CAN_REPLY = "canReply";
  @SerializedName(SERIALIZED_NAME_CAN_REPLY)
  private Boolean canReply;

  public static final String SERIALIZED_NAME_CHANNEL_ID = "channelId";
  @SerializedName(SERIALIZED_NAME_CHANNEL_ID)
  private String channelId;

  public static final String SERIALIZED_NAME_IS_PUBLIC = "isPublic";
  @SerializedName(SERIALIZED_NAME_IS_PUBLIC)
  private Boolean isPublic;

  public static final String SERIALIZED_NAME_TOP_LEVEL_COMMENT = "topLevelComment";
  @SerializedName(SERIALIZED_NAME_TOP_LEVEL_COMMENT)
  private Comment topLevelComment;

  public static final String SERIALIZED_NAME_TOTAL_REPLY_COUNT = "totalReplyCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_REPLY_COUNT)
  private Integer totalReplyCount;

  public static final String SERIALIZED_NAME_VIDEO_ID = "videoId";
  @SerializedName(SERIALIZED_NAME_VIDEO_ID)
  private String videoId;


  public CommentThreadSnippet canReply(Boolean canReply) {
    
    this.canReply = canReply;
    return this;
  }

   /**
   * Whether the current viewer of the thread can reply to it. This is viewer specific - other viewers may see a different value for this field.
   * @return canReply
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the current viewer of the thread can reply to it. This is viewer specific - other viewers may see a different value for this field.")

  public Boolean getCanReply() {
    return canReply;
  }


  public void setCanReply(Boolean canReply) {
    this.canReply = canReply;
  }


  public CommentThreadSnippet channelId(String channelId) {
    
    this.channelId = channelId;
    return this;
  }

   /**
   * The YouTube channel the comments in the thread refer to or the channel with the video the comments refer to. If video_id isn&#39;t set the comments refer to the channel itself.
   * @return channelId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The YouTube channel the comments in the thread refer to or the channel with the video the comments refer to. If video_id isn't set the comments refer to the channel itself.")

  public String getChannelId() {
    return channelId;
  }


  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public CommentThreadSnippet isPublic(Boolean isPublic) {
    
    this.isPublic = isPublic;
    return this;
  }

   /**
   * Whether the thread (and therefore all its comments) is visible to all YouTube users.
   * @return isPublic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the thread (and therefore all its comments) is visible to all YouTube users.")

  public Boolean getIsPublic() {
    return isPublic;
  }


  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }


  public CommentThreadSnippet topLevelComment(Comment topLevelComment) {
    
    this.topLevelComment = topLevelComment;
    return this;
  }

   /**
   * Get topLevelComment
   * @return topLevelComment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Comment getTopLevelComment() {
    return topLevelComment;
  }


  public void setTopLevelComment(Comment topLevelComment) {
    this.topLevelComment = topLevelComment;
  }


  public CommentThreadSnippet totalReplyCount(Integer totalReplyCount) {
    
    this.totalReplyCount = totalReplyCount;
    return this;
  }

   /**
   * The total number of replies (not including the top level comment).
   * @return totalReplyCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total number of replies (not including the top level comment).")

  public Integer getTotalReplyCount() {
    return totalReplyCount;
  }


  public void setTotalReplyCount(Integer totalReplyCount) {
    this.totalReplyCount = totalReplyCount;
  }


  public CommentThreadSnippet videoId(String videoId) {
    
    this.videoId = videoId;
    return this;
  }

   /**
   * The ID of the video the comments refer to, if any. No video_id implies a channel discussion comment.
   * @return videoId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the video the comments refer to, if any. No video_id implies a channel discussion comment.")

  public String getVideoId() {
    return videoId;
  }


  public void setVideoId(String videoId) {
    this.videoId = videoId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommentThreadSnippet commentThreadSnippet = (CommentThreadSnippet) o;
    return Objects.equals(this.canReply, commentThreadSnippet.canReply) &&
        Objects.equals(this.channelId, commentThreadSnippet.channelId) &&
        Objects.equals(this.isPublic, commentThreadSnippet.isPublic) &&
        Objects.equals(this.topLevelComment, commentThreadSnippet.topLevelComment) &&
        Objects.equals(this.totalReplyCount, commentThreadSnippet.totalReplyCount) &&
        Objects.equals(this.videoId, commentThreadSnippet.videoId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canReply, channelId, isPublic, topLevelComment, totalReplyCount, videoId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommentThreadSnippet {\n");
    sb.append("    canReply: ").append(toIndentedString(canReply)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    topLevelComment: ").append(toIndentedString(topLevelComment)).append("\n");
    sb.append("    totalReplyCount: ").append(toIndentedString(totalReplyCount)).append("\n");
    sb.append("    videoId: ").append(toIndentedString(videoId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

