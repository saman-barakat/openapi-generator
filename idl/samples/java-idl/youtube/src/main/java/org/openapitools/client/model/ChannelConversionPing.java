/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.
 */
@ApiModel(description = "Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.")
@javax.annotation.Generated(value = "com.us.idl.javaidl.JavaIDLCodegen", date = "2021-08-24T20:55:04.712703200+02:00[Europe/Paris]")
public class ChannelConversionPing {
  /**
   * Defines the context of the ping.
   */
  @JsonAdapter(ContextEnum.Adapter.class)
  public enum ContextEnum {
    SUBSCRIBE("subscribe"),
    
    UNSUBSCRIBE("unsubscribe"),
    
    CVIEW("cview");

    private String value;

    ContextEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ContextEnum fromValue(String value) {
      for (ContextEnum b : ContextEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ContextEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ContextEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ContextEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ContextEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CONTEXT = "context";
  @SerializedName(SERIALIZED_NAME_CONTEXT)
  private ContextEnum context;

  public static final String SERIALIZED_NAME_CONVERSION_URL = "conversionUrl";
  @SerializedName(SERIALIZED_NAME_CONVERSION_URL)
  private String conversionUrl;


  public ChannelConversionPing context(ContextEnum context) {
    
    this.context = context;
    return this;
  }

   /**
   * Defines the context of the ping.
   * @return context
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines the context of the ping.")

  public ContextEnum getContext() {
    return context;
  }


  public void setContext(ContextEnum context) {
    this.context = context;
  }


  public ChannelConversionPing conversionUrl(String conversionUrl) {
    
    this.conversionUrl = conversionUrl;
    return this;
  }

   /**
   * The url (without the schema) that the player shall send the ping to. It&#39;s at caller&#39;s descretion to decide which schema to use (http vs https) Example of a returned url: //googleads.g.doubleclick.net/pagead/ viewthroughconversion/962985656/?data&#x3D;path%3DtHe_path%3Btype%3D cview%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA&amp;labe&#x3D;default The caller must append biscotti authentication (ms param in case of mobile, for example) to this ping.
   * @return conversionUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The url (without the schema) that the player shall send the ping to. It's at caller's descretion to decide which schema to use (http vs https) Example of a returned url: //googleads.g.doubleclick.net/pagead/ viewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D cview%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA&labe=default The caller must append biscotti authentication (ms param in case of mobile, for example) to this ping.")

  public String getConversionUrl() {
    return conversionUrl;
  }


  public void setConversionUrl(String conversionUrl) {
    this.conversionUrl = conversionUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelConversionPing channelConversionPing = (ChannelConversionPing) o;
    return Objects.equals(this.context, channelConversionPing.context) &&
        Objects.equals(this.conversionUrl, channelConversionPing.conversionUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(context, conversionUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelConversionPing {\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    conversionUrl: ").append(toIndentedString(conversionUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

