/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.CommentSnippetAuthorChannelId;
import org.threeten.bp.OffsetDateTime;

/**
 * Basic details about a comment, such as its author and text.
 */
@ApiModel(description = "Basic details about a comment, such as its author and text.")
@javax.annotation.Generated(value = "com.us.idl.javaidl.JavaIDLCodegen", date = "2021-08-24T20:55:04.712703200+02:00[Europe/Paris]")
public class CommentSnippet {
  public static final String SERIALIZED_NAME_AUTHOR_CHANNEL_ID = "authorChannelId";
  @SerializedName(SERIALIZED_NAME_AUTHOR_CHANNEL_ID)
  private CommentSnippetAuthorChannelId authorChannelId;

  public static final String SERIALIZED_NAME_AUTHOR_CHANNEL_URL = "authorChannelUrl";
  @SerializedName(SERIALIZED_NAME_AUTHOR_CHANNEL_URL)
  private String authorChannelUrl;

  public static final String SERIALIZED_NAME_AUTHOR_DISPLAY_NAME = "authorDisplayName";
  @SerializedName(SERIALIZED_NAME_AUTHOR_DISPLAY_NAME)
  private String authorDisplayName;

  public static final String SERIALIZED_NAME_AUTHOR_PROFILE_IMAGE_URL = "authorProfileImageUrl";
  @SerializedName(SERIALIZED_NAME_AUTHOR_PROFILE_IMAGE_URL)
  private String authorProfileImageUrl;

  public static final String SERIALIZED_NAME_CAN_RATE = "canRate";
  @SerializedName(SERIALIZED_NAME_CAN_RATE)
  private Boolean canRate;

  public static final String SERIALIZED_NAME_CHANNEL_ID = "channelId";
  @SerializedName(SERIALIZED_NAME_CHANNEL_ID)
  private String channelId;

  public static final String SERIALIZED_NAME_LIKE_COUNT = "likeCount";
  @SerializedName(SERIALIZED_NAME_LIKE_COUNT)
  private Integer likeCount;

  /**
   * The comment&#39;s moderation status. Will not be set if the comments were requested through the id filter.
   */
  @JsonAdapter(ModerationStatusEnum.Adapter.class)
  public enum ModerationStatusEnum {
    PUBLISHED("published"),
    
    HELDFORREVIEW("heldForReview"),
    
    LIKELYSPAM("likelySpam"),
    
    REJECTED("rejected");

    private String value;

    ModerationStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ModerationStatusEnum fromValue(String value) {
      for (ModerationStatusEnum b : ModerationStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ModerationStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ModerationStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ModerationStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ModerationStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_MODERATION_STATUS = "moderationStatus";
  @SerializedName(SERIALIZED_NAME_MODERATION_STATUS)
  private ModerationStatusEnum moderationStatus;

  public static final String SERIALIZED_NAME_PARENT_ID = "parentId";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private String parentId;

  public static final String SERIALIZED_NAME_PUBLISHED_AT = "publishedAt";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_AT)
  private OffsetDateTime publishedAt;

  public static final String SERIALIZED_NAME_TEXT_DISPLAY = "textDisplay";
  @SerializedName(SERIALIZED_NAME_TEXT_DISPLAY)
  private String textDisplay;

  public static final String SERIALIZED_NAME_TEXT_ORIGINAL = "textOriginal";
  @SerializedName(SERIALIZED_NAME_TEXT_ORIGINAL)
  private String textOriginal;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_VIDEO_ID = "videoId";
  @SerializedName(SERIALIZED_NAME_VIDEO_ID)
  private String videoId;

  /**
   * The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.
   */
  @JsonAdapter(ViewerRatingEnum.Adapter.class)
  public enum ViewerRatingEnum {
    NONE("none"),
    
    LIKE("like"),
    
    DISLIKE("dislike");

    private String value;

    ViewerRatingEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ViewerRatingEnum fromValue(String value) {
      for (ViewerRatingEnum b : ViewerRatingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ViewerRatingEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ViewerRatingEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ViewerRatingEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ViewerRatingEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VIEWER_RATING = "viewerRating";
  @SerializedName(SERIALIZED_NAME_VIEWER_RATING)
  private ViewerRatingEnum viewerRating;


  public CommentSnippet authorChannelId(CommentSnippetAuthorChannelId authorChannelId) {
    
    this.authorChannelId = authorChannelId;
    return this;
  }

   /**
   * Get authorChannelId
   * @return authorChannelId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommentSnippetAuthorChannelId getAuthorChannelId() {
    return authorChannelId;
  }


  public void setAuthorChannelId(CommentSnippetAuthorChannelId authorChannelId) {
    this.authorChannelId = authorChannelId;
  }


  public CommentSnippet authorChannelUrl(String authorChannelUrl) {
    
    this.authorChannelUrl = authorChannelUrl;
    return this;
  }

   /**
   * Link to the author&#39;s YouTube channel, if any.
   * @return authorChannelUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Link to the author's YouTube channel, if any.")

  public String getAuthorChannelUrl() {
    return authorChannelUrl;
  }


  public void setAuthorChannelUrl(String authorChannelUrl) {
    this.authorChannelUrl = authorChannelUrl;
  }


  public CommentSnippet authorDisplayName(String authorDisplayName) {
    
    this.authorDisplayName = authorDisplayName;
    return this;
  }

   /**
   * The name of the user who posted the comment.
   * @return authorDisplayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the user who posted the comment.")

  public String getAuthorDisplayName() {
    return authorDisplayName;
  }


  public void setAuthorDisplayName(String authorDisplayName) {
    this.authorDisplayName = authorDisplayName;
  }


  public CommentSnippet authorProfileImageUrl(String authorProfileImageUrl) {
    
    this.authorProfileImageUrl = authorProfileImageUrl;
    return this;
  }

   /**
   * The URL for the avatar of the user who posted the comment.
   * @return authorProfileImageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL for the avatar of the user who posted the comment.")

  public String getAuthorProfileImageUrl() {
    return authorProfileImageUrl;
  }


  public void setAuthorProfileImageUrl(String authorProfileImageUrl) {
    this.authorProfileImageUrl = authorProfileImageUrl;
  }


  public CommentSnippet canRate(Boolean canRate) {
    
    this.canRate = canRate;
    return this;
  }

   /**
   * Whether the current viewer can rate this comment.
   * @return canRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the current viewer can rate this comment.")

  public Boolean getCanRate() {
    return canRate;
  }


  public void setCanRate(Boolean canRate) {
    this.canRate = canRate;
  }


  public CommentSnippet channelId(String channelId) {
    
    this.channelId = channelId;
    return this;
  }

   /**
   * The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it&#39;s the video&#39;s channel.
   * @return channelId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the corresponding YouTube channel. In case of a channel comment this is the channel the comment refers to. In case of a video comment it's the video's channel.")

  public String getChannelId() {
    return channelId;
  }


  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public CommentSnippet likeCount(Integer likeCount) {
    
    this.likeCount = likeCount;
    return this;
  }

   /**
   * The total number of likes this comment has received.
   * @return likeCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total number of likes this comment has received.")

  public Integer getLikeCount() {
    return likeCount;
  }


  public void setLikeCount(Integer likeCount) {
    this.likeCount = likeCount;
  }


  public CommentSnippet moderationStatus(ModerationStatusEnum moderationStatus) {
    
    this.moderationStatus = moderationStatus;
    return this;
  }

   /**
   * The comment&#39;s moderation status. Will not be set if the comments were requested through the id filter.
   * @return moderationStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The comment's moderation status. Will not be set if the comments were requested through the id filter.")

  public ModerationStatusEnum getModerationStatus() {
    return moderationStatus;
  }


  public void setModerationStatus(ModerationStatusEnum moderationStatus) {
    this.moderationStatus = moderationStatus;
  }


  public CommentSnippet parentId(String parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * The unique id of the parent comment, only set for replies.
   * @return parentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique id of the parent comment, only set for replies.")

  public String getParentId() {
    return parentId;
  }


  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  public CommentSnippet publishedAt(OffsetDateTime publishedAt) {
    
    this.publishedAt = publishedAt;
    return this;
  }

   /**
   * The date and time when the comment was originally published.
   * @return publishedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time when the comment was originally published.")

  public OffsetDateTime getPublishedAt() {
    return publishedAt;
  }


  public void setPublishedAt(OffsetDateTime publishedAt) {
    this.publishedAt = publishedAt;
  }


  public CommentSnippet textDisplay(String textDisplay) {
    
    this.textDisplay = textDisplay;
    return this;
  }

   /**
   * The comment&#39;s text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc.
   * @return textDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The comment's text. The format is either plain text or HTML dependent on what has been requested. Even the plain text representation may differ from the text originally posted in that it may replace video links with video titles etc.")

  public String getTextDisplay() {
    return textDisplay;
  }


  public void setTextDisplay(String textDisplay) {
    this.textDisplay = textDisplay;
  }


  public CommentSnippet textOriginal(String textOriginal) {
    
    this.textOriginal = textOriginal;
    return this;
  }

   /**
   * The comment&#39;s original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment&#39;s author.
   * @return textOriginal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The comment's original raw text as initially posted or last updated. The original text will only be returned if it is accessible to the viewer, which is only guaranteed if the viewer is the comment's author.")

  public String getTextOriginal() {
    return textOriginal;
  }


  public void setTextOriginal(String textOriginal) {
    this.textOriginal = textOriginal;
  }


  public CommentSnippet updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The date and time when the comment was last updated.
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time when the comment was last updated.")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public CommentSnippet videoId(String videoId) {
    
    this.videoId = videoId;
    return this;
  }

   /**
   * The ID of the video the comment refers to, if any.
   * @return videoId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the video the comment refers to, if any.")

  public String getVideoId() {
    return videoId;
  }


  public void setVideoId(String videoId) {
    this.videoId = videoId;
  }


  public CommentSnippet viewerRating(ViewerRatingEnum viewerRating) {
    
    this.viewerRating = viewerRating;
    return this;
  }

   /**
   * The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.
   * @return viewerRating
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The rating the viewer has given to this comment. For the time being this will never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE. This may change in the future.")

  public ViewerRatingEnum getViewerRating() {
    return viewerRating;
  }


  public void setViewerRating(ViewerRatingEnum viewerRating) {
    this.viewerRating = viewerRating;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommentSnippet commentSnippet = (CommentSnippet) o;
    return Objects.equals(this.authorChannelId, commentSnippet.authorChannelId) &&
        Objects.equals(this.authorChannelUrl, commentSnippet.authorChannelUrl) &&
        Objects.equals(this.authorDisplayName, commentSnippet.authorDisplayName) &&
        Objects.equals(this.authorProfileImageUrl, commentSnippet.authorProfileImageUrl) &&
        Objects.equals(this.canRate, commentSnippet.canRate) &&
        Objects.equals(this.channelId, commentSnippet.channelId) &&
        Objects.equals(this.likeCount, commentSnippet.likeCount) &&
        Objects.equals(this.moderationStatus, commentSnippet.moderationStatus) &&
        Objects.equals(this.parentId, commentSnippet.parentId) &&
        Objects.equals(this.publishedAt, commentSnippet.publishedAt) &&
        Objects.equals(this.textDisplay, commentSnippet.textDisplay) &&
        Objects.equals(this.textOriginal, commentSnippet.textOriginal) &&
        Objects.equals(this.updatedAt, commentSnippet.updatedAt) &&
        Objects.equals(this.videoId, commentSnippet.videoId) &&
        Objects.equals(this.viewerRating, commentSnippet.viewerRating);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorChannelId, authorChannelUrl, authorDisplayName, authorProfileImageUrl, canRate, channelId, likeCount, moderationStatus, parentId, publishedAt, textDisplay, textOriginal, updatedAt, videoId, viewerRating);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommentSnippet {\n");
    sb.append("    authorChannelId: ").append(toIndentedString(authorChannelId)).append("\n");
    sb.append("    authorChannelUrl: ").append(toIndentedString(authorChannelUrl)).append("\n");
    sb.append("    authorDisplayName: ").append(toIndentedString(authorDisplayName)).append("\n");
    sb.append("    authorProfileImageUrl: ").append(toIndentedString(authorProfileImageUrl)).append("\n");
    sb.append("    canRate: ").append(toIndentedString(canRate)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    likeCount: ").append(toIndentedString(likeCount)).append("\n");
    sb.append("    moderationStatus: ").append(toIndentedString(moderationStatus)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    publishedAt: ").append(toIndentedString(publishedAt)).append("\n");
    sb.append("    textDisplay: ").append(toIndentedString(textDisplay)).append("\n");
    sb.append("    textOriginal: ").append(toIndentedString(textOriginal)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    videoId: ").append(toIndentedString(videoId)).append("\n");
    sb.append("    viewerRating: ").append(toIndentedString(viewerRating)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

