/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The third-party link status object contains information about the status of the link.
 */
@ApiModel(description = "The third-party link status object contains information about the status of the link.")
@javax.annotation.Generated(value = "com.us.idl.javaidl.JavaIDLCodegen", date = "2021-08-24T20:55:04.712703200+02:00[Europe/Paris]")
public class ThirdPartyLinkStatus {
  /**
   * Gets or Sets linkStatus
   */
  @JsonAdapter(LinkStatusEnum.Adapter.class)
  public enum LinkStatusEnum {
    UNKNOWN("unknown"),
    
    FAILED("failed"),
    
    PENDING("pending"),
    
    LINKED("linked");

    private String value;

    LinkStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LinkStatusEnum fromValue(String value) {
      for (LinkStatusEnum b : LinkStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LinkStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LinkStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LinkStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LinkStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LINK_STATUS = "linkStatus";
  @SerializedName(SERIALIZED_NAME_LINK_STATUS)
  private LinkStatusEnum linkStatus;


  public ThirdPartyLinkStatus linkStatus(LinkStatusEnum linkStatus) {
    
    this.linkStatus = linkStatus;
    return this;
  }

   /**
   * Get linkStatus
   * @return linkStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LinkStatusEnum getLinkStatus() {
    return linkStatus;
  }


  public void setLinkStatus(LinkStatusEnum linkStatus) {
    this.linkStatus = linkStatus;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ThirdPartyLinkStatus thirdPartyLinkStatus = (ThirdPartyLinkStatus) o;
    return Objects.equals(this.linkStatus, thirdPartyLinkStatus.linkStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(linkStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ThirdPartyLinkStatus {\n");
    sb.append("    linkStatus: ").append(toIndentedString(linkStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

