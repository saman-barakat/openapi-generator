/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LiveChatMessageAuthorDetails
 */
@javax.annotation.Generated(value = "com.us.idl.javaidl.JavaIDLCodegen", date = "2021-08-24T20:55:04.712703200+02:00[Europe/Paris]")
public class LiveChatMessageAuthorDetails {
  public static final String SERIALIZED_NAME_CHANNEL_ID = "channelId";
  @SerializedName(SERIALIZED_NAME_CHANNEL_ID)
  private String channelId;

  public static final String SERIALIZED_NAME_CHANNEL_URL = "channelUrl";
  @SerializedName(SERIALIZED_NAME_CHANNEL_URL)
  private String channelUrl;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_IS_CHAT_MODERATOR = "isChatModerator";
  @SerializedName(SERIALIZED_NAME_IS_CHAT_MODERATOR)
  private Boolean isChatModerator;

  public static final String SERIALIZED_NAME_IS_CHAT_OWNER = "isChatOwner";
  @SerializedName(SERIALIZED_NAME_IS_CHAT_OWNER)
  private Boolean isChatOwner;

  public static final String SERIALIZED_NAME_IS_CHAT_SPONSOR = "isChatSponsor";
  @SerializedName(SERIALIZED_NAME_IS_CHAT_SPONSOR)
  private Boolean isChatSponsor;

  public static final String SERIALIZED_NAME_IS_VERIFIED = "isVerified";
  @SerializedName(SERIALIZED_NAME_IS_VERIFIED)
  private Boolean isVerified;

  public static final String SERIALIZED_NAME_PROFILE_IMAGE_URL = "profileImageUrl";
  @SerializedName(SERIALIZED_NAME_PROFILE_IMAGE_URL)
  private String profileImageUrl;


  public LiveChatMessageAuthorDetails channelId(String channelId) {
    
    this.channelId = channelId;
    return this;
  }

   /**
   * The YouTube channel ID.
   * @return channelId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The YouTube channel ID.")

  public String getChannelId() {
    return channelId;
  }


  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public LiveChatMessageAuthorDetails channelUrl(String channelUrl) {
    
    this.channelUrl = channelUrl;
    return this;
  }

   /**
   * The channel&#39;s URL.
   * @return channelUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The channel's URL.")

  public String getChannelUrl() {
    return channelUrl;
  }


  public void setChannelUrl(String channelUrl) {
    this.channelUrl = channelUrl;
  }


  public LiveChatMessageAuthorDetails displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * The channel&#39;s display name.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The channel's display name.")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public LiveChatMessageAuthorDetails isChatModerator(Boolean isChatModerator) {
    
    this.isChatModerator = isChatModerator;
    return this;
  }

   /**
   * Whether the author is a moderator of the live chat.
   * @return isChatModerator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the author is a moderator of the live chat.")

  public Boolean getIsChatModerator() {
    return isChatModerator;
  }


  public void setIsChatModerator(Boolean isChatModerator) {
    this.isChatModerator = isChatModerator;
  }


  public LiveChatMessageAuthorDetails isChatOwner(Boolean isChatOwner) {
    
    this.isChatOwner = isChatOwner;
    return this;
  }

   /**
   * Whether the author is the owner of the live chat.
   * @return isChatOwner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the author is the owner of the live chat.")

  public Boolean getIsChatOwner() {
    return isChatOwner;
  }


  public void setIsChatOwner(Boolean isChatOwner) {
    this.isChatOwner = isChatOwner;
  }


  public LiveChatMessageAuthorDetails isChatSponsor(Boolean isChatSponsor) {
    
    this.isChatSponsor = isChatSponsor;
    return this;
  }

   /**
   * Whether the author is a sponsor of the live chat.
   * @return isChatSponsor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the author is a sponsor of the live chat.")

  public Boolean getIsChatSponsor() {
    return isChatSponsor;
  }


  public void setIsChatSponsor(Boolean isChatSponsor) {
    this.isChatSponsor = isChatSponsor;
  }


  public LiveChatMessageAuthorDetails isVerified(Boolean isVerified) {
    
    this.isVerified = isVerified;
    return this;
  }

   /**
   * Whether the author&#39;s identity has been verified by YouTube.
   * @return isVerified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the author's identity has been verified by YouTube.")

  public Boolean getIsVerified() {
    return isVerified;
  }


  public void setIsVerified(Boolean isVerified) {
    this.isVerified = isVerified;
  }


  public LiveChatMessageAuthorDetails profileImageUrl(String profileImageUrl) {
    
    this.profileImageUrl = profileImageUrl;
    return this;
  }

   /**
   * The channels&#39;s avatar URL.
   * @return profileImageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The channels's avatar URL.")

  public String getProfileImageUrl() {
    return profileImageUrl;
  }


  public void setProfileImageUrl(String profileImageUrl) {
    this.profileImageUrl = profileImageUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LiveChatMessageAuthorDetails liveChatMessageAuthorDetails = (LiveChatMessageAuthorDetails) o;
    return Objects.equals(this.channelId, liveChatMessageAuthorDetails.channelId) &&
        Objects.equals(this.channelUrl, liveChatMessageAuthorDetails.channelUrl) &&
        Objects.equals(this.displayName, liveChatMessageAuthorDetails.displayName) &&
        Objects.equals(this.isChatModerator, liveChatMessageAuthorDetails.isChatModerator) &&
        Objects.equals(this.isChatOwner, liveChatMessageAuthorDetails.isChatOwner) &&
        Objects.equals(this.isChatSponsor, liveChatMessageAuthorDetails.isChatSponsor) &&
        Objects.equals(this.isVerified, liveChatMessageAuthorDetails.isVerified) &&
        Objects.equals(this.profileImageUrl, liveChatMessageAuthorDetails.profileImageUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelId, channelUrl, displayName, isChatModerator, isChatOwner, isChatSponsor, isVerified, profileImageUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LiveChatMessageAuthorDetails {\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    channelUrl: ").append(toIndentedString(channelUrl)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    isChatModerator: ").append(toIndentedString(isChatModerator)).append("\n");
    sb.append("    isChatOwner: ").append(toIndentedString(isChatOwner)).append("\n");
    sb.append("    isChatSponsor: ").append(toIndentedString(isChatSponsor)).append("\n");
    sb.append("    isVerified: ").append(toIndentedString(isVerified)).append("\n");
    sb.append("    profileImageUrl: ").append(toIndentedString(profileImageUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

