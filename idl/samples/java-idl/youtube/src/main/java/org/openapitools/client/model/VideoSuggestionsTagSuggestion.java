/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * A single tag suggestion with it&#39;s relevance information.
 */
@ApiModel(description = "A single tag suggestion with it's relevance information.")
@javax.annotation.Generated(value = "com.us.idl.javaidl.JavaIDLCodegen", date = "2021-08-24T20:55:04.712703200+02:00[Europe/Paris]")
public class VideoSuggestionsTagSuggestion {
  public static final String SERIALIZED_NAME_CATEGORY_RESTRICTS = "categoryRestricts";
  @SerializedName(SERIALIZED_NAME_CATEGORY_RESTRICTS)
  private List<String> categoryRestricts = null;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private String tag;


  public VideoSuggestionsTagSuggestion categoryRestricts(List<String> categoryRestricts) {
    
    this.categoryRestricts = categoryRestricts;
    return this;
  }

  public VideoSuggestionsTagSuggestion addCategoryRestrictsItem(String categoryRestrictsItem) {
    if (this.categoryRestricts == null) {
      this.categoryRestricts = new ArrayList<String>();
    }
    this.categoryRestricts.add(categoryRestrictsItem);
    return this;
  }

   /**
   * A set of video categories for which the tag is relevant. You can use this information to display appropriate tag suggestions based on the video category that the video uploader associates with the video. By default, tag suggestions are relevant for all categories if there are no restricts defined for the keyword.
   * @return categoryRestricts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A set of video categories for which the tag is relevant. You can use this information to display appropriate tag suggestions based on the video category that the video uploader associates with the video. By default, tag suggestions are relevant for all categories if there are no restricts defined for the keyword.")

  public List<String> getCategoryRestricts() {
    return categoryRestricts;
  }


  public void setCategoryRestricts(List<String> categoryRestricts) {
    this.categoryRestricts = categoryRestricts;
  }


  public VideoSuggestionsTagSuggestion tag(String tag) {
    
    this.tag = tag;
    return this;
  }

   /**
   * The keyword tag suggested for the video.
   * @return tag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The keyword tag suggested for the video.")

  public String getTag() {
    return tag;
  }


  public void setTag(String tag) {
    this.tag = tag;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoSuggestionsTagSuggestion videoSuggestionsTagSuggestion = (VideoSuggestionsTagSuggestion) o;
    return Objects.equals(this.categoryRestricts, videoSuggestionsTagSuggestion.categoryRestricts) &&
        Objects.equals(this.tag, videoSuggestionsTagSuggestion.tag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryRestricts, tag);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoSuggestionsTagSuggestion {\n");
    sb.append("    categoryRestricts: ").append(toIndentedString(categoryRestricts)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

