/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Information about an audio stream.
 */
@ApiModel(description = "Information about an audio stream.")
@javax.annotation.Generated(value = "com.us.idl.javaidl.JavaIDLCodegen", date = "2021-08-24T20:55:04.712703200+02:00[Europe/Paris]")
public class VideoFileDetailsAudioStream {
  public static final String SERIALIZED_NAME_BITRATE_BPS = "bitrateBps";
  @SerializedName(SERIALIZED_NAME_BITRATE_BPS)
  private String bitrateBps;

  public static final String SERIALIZED_NAME_CHANNEL_COUNT = "channelCount";
  @SerializedName(SERIALIZED_NAME_CHANNEL_COUNT)
  private Integer channelCount;

  public static final String SERIALIZED_NAME_CODEC = "codec";
  @SerializedName(SERIALIZED_NAME_CODEC)
  private String codec;

  public static final String SERIALIZED_NAME_VENDOR = "vendor";
  @SerializedName(SERIALIZED_NAME_VENDOR)
  private String vendor;


  public VideoFileDetailsAudioStream bitrateBps(String bitrateBps) {
    
    this.bitrateBps = bitrateBps;
    return this;
  }

   /**
   * The audio stream&#39;s bitrate, in bits per second.
   * @return bitrateBps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The audio stream's bitrate, in bits per second.")

  public String getBitrateBps() {
    return bitrateBps;
  }


  public void setBitrateBps(String bitrateBps) {
    this.bitrateBps = bitrateBps;
  }


  public VideoFileDetailsAudioStream channelCount(Integer channelCount) {
    
    this.channelCount = channelCount;
    return this;
  }

   /**
   * The number of audio channels that the stream contains.
   * @return channelCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of audio channels that the stream contains.")

  public Integer getChannelCount() {
    return channelCount;
  }


  public void setChannelCount(Integer channelCount) {
    this.channelCount = channelCount;
  }


  public VideoFileDetailsAudioStream codec(String codec) {
    
    this.codec = codec;
    return this;
  }

   /**
   * The audio codec that the stream uses.
   * @return codec
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The audio codec that the stream uses.")

  public String getCodec() {
    return codec;
  }


  public void setCodec(String codec) {
    this.codec = codec;
  }


  public VideoFileDetailsAudioStream vendor(String vendor) {
    
    this.vendor = vendor;
    return this;
  }

   /**
   * A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.
   * @return vendor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.")

  public String getVendor() {
    return vendor;
  }


  public void setVendor(String vendor) {
    this.vendor = vendor;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoFileDetailsAudioStream videoFileDetailsAudioStream = (VideoFileDetailsAudioStream) o;
    return Objects.equals(this.bitrateBps, videoFileDetailsAudioStream.bitrateBps) &&
        Objects.equals(this.channelCount, videoFileDetailsAudioStream.channelCount) &&
        Objects.equals(this.codec, videoFileDetailsAudioStream.codec) &&
        Objects.equals(this.vendor, videoFileDetailsAudioStream.vendor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bitrateBps, channelCount, codec, vendor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoFileDetailsAudioStream {\n");
    sb.append("    bitrateBps: ").append(toIndentedString(bitrateBps)).append("\n");
    sb.append("    channelCount: ").append(toIndentedString(channelCount)).append("\n");
    sb.append("    codec: ").append(toIndentedString(codec)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

