/*
 * YouTube Data API v3
 * The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Basic details about a video category, such as its localized title.
 */
@ApiModel(description = "Basic details about a video category, such as its localized title.")
@javax.annotation.Generated(value = "com.us.idl.javaidl.JavaIDLCodegen", date = "2021-08-24T20:55:04.712703200+02:00[Europe/Paris]")
public class VideoCategorySnippet {
  public static final String SERIALIZED_NAME_ASSIGNABLE = "assignable";
  @SerializedName(SERIALIZED_NAME_ASSIGNABLE)
  private Boolean assignable;

  public static final String SERIALIZED_NAME_CHANNEL_ID = "channelId";
  @SerializedName(SERIALIZED_NAME_CHANNEL_ID)
  private String channelId = "UCBR8-60-B28hp2BmDPdntcQ";

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;


  public VideoCategorySnippet assignable(Boolean assignable) {
    
    this.assignable = assignable;
    return this;
  }

   /**
   * Get assignable
   * @return assignable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAssignable() {
    return assignable;
  }


  public void setAssignable(Boolean assignable) {
    this.assignable = assignable;
  }


  public VideoCategorySnippet channelId(String channelId) {
    
    this.channelId = channelId;
    return this;
  }

   /**
   * The YouTube channel that created the video category.
   * @return channelId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The YouTube channel that created the video category.")

  public String getChannelId() {
    return channelId;
  }


  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }


  public VideoCategorySnippet title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The video category&#39;s title.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The video category's title.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoCategorySnippet videoCategorySnippet = (VideoCategorySnippet) o;
    return Objects.equals(this.assignable, videoCategorySnippet.assignable) &&
        Objects.equals(this.channelId, videoCategorySnippet.channelId) &&
        Objects.equals(this.title, videoCategorySnippet.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assignable, channelId, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoCategorySnippet {\n");
    sb.append("    assignable: ").append(toIndentedString(assignable)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

