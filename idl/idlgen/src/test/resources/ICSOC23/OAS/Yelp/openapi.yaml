openapi: 3.0.0
info:
  description: Yelp API
  version: 1.0.0
  title: Yelp API
paths:
  /businesses/search:
    get:
      operationId: getBusinesses
      summary: Get businesses
      description: Get businesses
      parameters:
        - name: term
          description: Optional. Search term, for example "food" or "restaurants". The term may also be business names, such as "Starbucks". If term is not included the endpoint will default to searching across businesses from a small number of popular categories.
          in: query
          required: false
          schema:
            type: string
        - name: location
          description: 'Required if either latitude or longitude is not provided. This string indicates the geographic area to be used when searching for businesses. Examples: "New York City", "NYC", "350 5th Ave, New York, NY 10118". Businesses returned in the response may not be strictly within the specified location.'
          in: query
          required: false
          schema:
            type: string
        - name: latitude
          description: Required if location is not provided. Latitude of the location you want to search nearby.
          in: query
          required: false
          schema:
            type: string
        - name: longitude
          description: Required if location is not provided. Longitude of the location you want to search nearby.
          in: query
          required: false
          schema:
            type: string
        - name: radius
          description: Optional. A suggested search radius in meters. This field is used as a suggestion to the search. The actual search radius may be lower than the suggested radius in dense urban areas, and higher in regions of less business density. If the specified value is too large, a AREA_TOO_LARGE error may be returned. The max value is 40000 meters (about 25 miles).
          in: query
          required: false
          schema:
            type: integer
            maximum: 40000
        - name: categories
          description: Optional. Categories to filter the search results with. See the list of supported categories. The category filter can be a list of comma delimited categories. For example, "bars,french" will filter by Bars OR French. The category identifier should be used (for example "discgolf", not "Disc Golf").
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: locale
          description: Optional. Specify the locale into which to localize the business information. See the list of supported locales. Defaults to en_US.
          in: query
          required: false
          schema:
            type: string
        - name: limit
          description: Optional. Number of business results to return. By default, it will return 20. Maximum is 50.
          in: query
          required: false
          schema:
            type: integer
            maximum: 50
        - name: offset
          description: Optional. Offset the list of returned business results by this amount.
          in: query
          required: false
          schema:
            type: integer
        - name: sort_by
          description: "Optional. Suggestion to the search algorithm that the results be sorted by one of the these modes: best_match, rating, review_count or distance. The default is best_match. Note that specifying the sort_by is a suggestion (not strictly enforced) to Yelp's search, which considers multiple input parameters to return the most relevant results. For example, the rating sort is not strictly sorted by the rating value, but by an adjusted rating value that takes into account the number of ratings, similar to a Bayesian average. This is to prevent skewing results to businesses with a single review."
          in: query
          required: false
          schema:
            type: string
            enum:
              - best_match
              - rating
              - review_count
              - distance
        - name: price
          description: 'Optional. Pricing levels to filter the search result with: 1 = $, 2 = $$, 3 = $$$, 4 = $$$$. The price filter can be a list of comma delimited pricing levels. For example, "1, 2, 3" will filter the results to show the ones that are $, $$, or $$$.'
          in: query
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - 1
                - 2
                - 3
                - 4
        - name: open_now
          description: Optional. Default to false. When set to true, only return the businesses open now. Notice that open_at and open_now cannot be used together.
          in: query
          required: false
          schema:
            type: boolean
        - name: open_at
          description: Optional. An integer represending the Unix time in the same timezone of the search location. If specified, it will return business open at the given time. Notice that open_at and open_now cannot be used together.
          in: query
          required: false
          schema:
            type: integer
        - name: attributes
          description: >-
            Optional. Try these additional filters to return specific search results!
            hot_and_new - popular businesses which recently joined Yelp
            request_a_quote - businesses which actively reply to Request a Quote inquiries
            reservation - businesses with Yelp Reservations bookings enabled on their profile page
            waitlist_reservation - businesses with Yelp Waitlist bookings enabled on their profile screen (iOS/Android)
            deals - businesses offering Yelp Deals on their profile page
            gender_neutral_restrooms - businesses which provide gender neutral restrooms
            open_to_all - businesses which are Open To All
            wheelchair_accessible - businesses which are Wheelchair Accessible
            You can combine multiple attributes by providing a comma separated like "attribute1,attribute2". If multiple attributes are used, only businesses that satisfy ALL attributes will be returned in search results. For example, the attributes "hot_and_new,request_a_quote" will return businesses that are Hot and New AND offer Request a Quote.
          in: query
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - hot_and_new
                - request_a_quote
                - reservation
                - waitlist_reservation
                - deals
                - gender_neutral_restrooms
                - open_to_all
                - wheelchair_accessible
      x-dependencies:
        - Or(location, latitude AND longitude);
        - ZeroOrOne(open_now, open_at);
        - offset + limit <= 1000;
        - IF offset AND NOT limit THEN offset <= 980;
      responses:
        "200":
          description: Returns all businesses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessesResult"
        "400":
          description: bad request
  /transactions/{transaction_type}/search:
    get:
      operationId: getTransactions
      summary: Get transactions
      description: Get transactions
      parameters:
        - name: transaction_type
          in: path
          required: true
          schema:
            type: string
        - name: location
          in: query
          required: false
          description: "Required when latitude and longitude aren't provided. Address of the location you want to deliver to."
          schema:
            type: string
        - name: latitude
          in: query
          required: false
          description: "Required when latitude and longitude aren't provided. Address of the location you want to deliver to."
          schema:
            type: string
        - name: longitude
          in: query
          required: false
          description: "Required when location isn't provided. Longitude of the location you want to deliver to."
          schema:
            type: string
      x-dependencies:
        - Or(location, latitude AND longitude);
      responses:
        200:
          description: Returns all businesses
          content:
            application/json:
              schema:
                $ref: '#/definitions/BusinessesResult'
        400:
          description: bad request
servers:
  - url: http://localhost:8083/v3
components:
  schemas:
    BusinessesResult:
      type: object
      properties:
        total:
          type: integer
        region:
          type: object
          properties:
            center:
              type: object
              properties:
                latitude:
                  type: number
                longitude:
                  type: number
        businesses:
          type: array
          items:
            type: object
            properties:
              categories:
                type: array
                items:
                  type: object
                  properties:
                    alias:
                      type: string
                    title:
                      type: string
              coordinates:
                type: object
                properties:
                  latitude:
                    type: number
                  longitude:
                    type: number
              display_phone:
                type: string
              distance:
                type: number
              id:
                type: string
              alias:
                type: string
              image_url:
                type: string
              is_closed:
                type: boolean
              name:
                type: string
              phone:
                type: string
              price:
                type: string
                enum:
                  - $
                  - $$
                  - $$$
                  - $$$$
              rating:
                type: number
                minimum: 1
                maximum: 5
              review_count:
                type: integer
              url:
                type: string
              transactions:
                type: array
                items:
                  type: string
                  enum:
                    - pickup
                    - delivery
                    - restaurant_reservation
              location:
                type: object
                properties:
                  address1:
                    type: string
                    nullable: true
                  address2:
                    type: string
                    nullable: true
                  address3:
                    type: string
                    nullable: true
                  city:
                    type: string
                  country:
                    type: string
                  display_address:
                    type: array
                    items:
                      type: string
                  state:
                    type: string
                  zip_code:
                    type: string